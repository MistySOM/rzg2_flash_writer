/* DISCLAIMER
# This software is supplied by Renesas Electronics Corporation and is only
# intended for use with Renesas products. No other uses are authorized. This
# software is owned by Renesas Electronics Corporation and is protected under
# all applicable laws, including copyright laws.
# THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
# THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT
# LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
# AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.
# TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS
# ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE
# FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR
# ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE
# BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
# Renesas reserves the right, without notice, to make changes to this software
# and to discontinue the availability of this software. By using this software,
# you agree to the additional terms and conditions found by accessing the
# following link:
# http://www.renesas.com/disclaimer
# Copyright (C) 2021 Renesas Electronics Corporation. All rights reserved.#
*/
EL3_STACK_SIZE = DEFINED(_EL3_STACK_SIZE) ? _EL3_STACK_SIZE : 0x2000;

MEMORY {
    RAMA	(rw) : ORIGIN = 0x80100000, LENGTH = 0x00032000
}

ENTRY(_boot)

SECTIONS
{
	.vect : ALIGN(4096) {
		KEEP (*(.vectors))
	} > RAMA
	
	.boot : {
		KEEP (*(.boot))
	} > RAMA

	.text : {
		*(.text*)
		*(.rodata*)
		. = NEXT(64);
		__RO_END__ = .;
	} > RAMA

	.data : {
		__DATA_START__ = .;
		 *(.data)
		. = NEXT(64);
		__DATA_END__ = .;
	} > RAMA

	__DATA_SIZE__ = SIZEOF(.data);

	.bss (NOLOAD) : ALIGN( 0x20 ) {
		__bss_start = .;
		_fbss = . ;
		* (.bss .bss.*)
		* (COMMON)
		. = ALIGN( 0x8 );
		__bss_end = .;
		_end = . ;
		_heap = . ;
	} > RAMA

	stacks (NOLOAD) : ALIGN(64) {
		. = ALIGN(64);
		_el3_stack_end = .;
		. += EL3_STACK_SIZE;
		__el3_stack = .;
	} > RAMA

	__BSS_SIZE__ = SIZEOF(.bss);
}
